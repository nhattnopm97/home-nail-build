{"version":3,"file":"vendors-node_modules_react-native_Libraries_Components_AccessibilityInfo_legacySendAccessibil-491472.chunk.bundle","sources":["webpack://miniApp/./node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js","webpack://miniApp/./node_modules/react-native/Libraries/Components/TextInput/RCTSingelineTextInputNativeComponent.js","webpack://miniApp/./node_modules/react-native/Libraries/Components/AccessibilityInfo/legacySendAccessibilityEvent.android.js","webpack://miniApp/./node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js","webpack://miniApp/./node_modules/react-native/Libraries/Components/TextInput/TextInputState.js","webpack://miniApp/./node_modules/react-native/Libraries/Core/registerCallableModule.js","webpack://miniApp/./node_modules/react-native/Libraries/StyleSheet/flattenStyle.js","webpack://miniApp/./node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js","webpack://miniApp/./node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js"],"sourcesContent":["                                                                                              \n                                                                                            \n                                                                                                                            \n                                                       \n                                                                         \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\n                                                                                                                                                                                                                                         \n                                                                                                                                                                    \n                                                                    \n                                      \n                                  \n                         \n       \nn                           \n                         \n                                 \n                                                                                   \n                                      \n                            \n                              \n                                \n                                  \n                                                                                      \n                         \n                       \n                              \n                                 \n                      \n                                                      \n                                                     \n                     \n                       \n                                             \n                 \n       \n                                              \n                 \n       \n                                               \n                  \n                      \n                 \n       \n                                                   \n                  \n                      \n                 \n       \n                                                        \n                  \n                             \n                    \n                     \n        \n       \n                                                   \n                  \n                 \n       \n                                                      \n                  \n                           \n                    \n                  \n        \n       \n                                                      \n                  \n                 \n       \n                                                 \n                  \n                \n       \n                                             \n                  \n                                   \n                              \n                  \n                     \n                   \n                    \n        \n                               \n                \n                \n        \n                             \n                    \n                     \n        \n                                   \n                    \n                     \n        \n                          \n                \n                \n        \n       \n                           \n                                     \n                             \n                               \n                                     \n                           \n                 \n                 \n      \n                  \n                         \n                               \n                          \n                                   \n                         \n                         \n                               \n                                \n                            \n                               \n                      \n                                  \n                    \n                     \n      \n                      \n                          \n                 \n                         \n                    \n                      \n                                \n                       \n                       \n                              \n                            \n                              \n                 \n    \n                                             \n                                                          \nexport const Commands                 = codegenNativeCommands                ({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection']\n});\nexport const __INTERNAL_VIEW_CONFIG                    = {\n  uiViewClassName: 'AndroidTextInput',\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture'\n      }\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture'\n      }\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture'\n      }\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture'\n      }\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture'\n      }\n    }\n  },\n  directEventTypes: {\n    topScroll: {\n      registrationName: 'onScroll'\n    }\n  },\n  validAttributes: {\n    maxFontSizeMultiplier: true,\n    adjustsFontSizeToFit: true,\n    minimumFontScale: true,\n    autoFocus: true,\n    placeholder: true,\n    inlineImagePadding: true,\n    contextMenuHidden: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    maxLength: true,\n    selectTextOnFocus: true,\n    textShadowRadius: true,\n    underlineColorAndroid: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    textDecorationLine: true,\n    submitBehavior: true,\n    textAlignVertical: true,\n    fontStyle: true,\n    textShadowOffset: true,\n    selectionColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    selectionHandleColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    importantForAutofill: true,\n    lineHeight: true,\n    textTransform: true,\n    returnKeyType: true,\n    keyboardType: true,\n    multiline: true,\n    color: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    autoComplete: true,\n    numberOfLines: true,\n    letterSpacing: true,\n    returnKeyLabel: true,\n    fontSize: true,\n    onKeyPress: true,\n    cursorColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    text: true,\n    showSoftInputOnFocus: true,\n    textAlign: true,\n    autoCapitalize: true,\n    autoCorrect: true,\n    caretHidden: true,\n    secureTextEntry: true,\n    textBreakStrategy: true,\n    onScroll: true,\n    onContentSizeChange: true,\n    disableFullscreenUI: true,\n    includeFontPadding: true,\n    fontWeight: true,\n    fontFamily: true,\n    allowFontScaling: true,\n    onSelectionChange: true,\n    mostRecentEventCount: true,\n    inlineImageLeft: true,\n    editable: true,\n    fontVariant: true,\n    borderBottomRightRadius: true,\n    borderBottomColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderRadius: true,\n    borderRightColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderTopRightRadius: true,\n    borderStyle: true,\n    borderBottomLeftRadius: true,\n    borderLeftColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderTopLeftRadius: true,\n    borderTopColor: {\n      process: require('../../StyleSheet/processColor').default\n    }\n  }\n};\nlet AndroidTextInputNativeComponent = NativeComponentRegistry.get             ('AndroidTextInput', () => __INTERNAL_VIEW_CONFIG);\nexport default ((AndroidTextInputNativeComponent     )                            );","                                                                                              \n                                                                         \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport RCTTextInputViewConfig from './RCTTextInputViewConfig';\n                                       \n                                                          \nexport const Commands                 = codegenNativeCommands                ({\n  supportedCommands: ['focus', 'blur', 'setTextAndSelection']\n});\nexport const __INTERNAL_VIEW_CONFIG                    = {\n  uiViewClassName: 'RCTSinglelineTextInputView',\n  ...RCTTextInputViewConfig\n};\nconst SinglelineTextInputNativeComponent                       = NativeComponentRegistry.get       ('RCTSinglelineTextInputView', () => __INTERNAL_VIEW_CONFIG);\nexport default ((SinglelineTextInputNativeComponent     )                      );","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\nimport UIManager from '../../ReactNative/UIManager';\nimport nullthrows from 'nullthrows';\n\n/**\n * This is a function exposed to the React Renderer that can be used by the\n * pre-Fabric renderer to emit accessibility events to pre-Fabric nodes.\n */\nfunction legacySendAccessibilityEvent(\n  reactTag        ,\n  eventType        ,\n)       {\n  if (eventType === 'focus') {\n    nullthrows(UIManager.sendAccessibilityEvent)(\n      reactTag,\n      UIManager.getConstants().AccessibilityEventTypes.typeViewFocused,\n    );\n  }\n  if (eventType === 'click') {\n    nullthrows(UIManager.sendAccessibilityEvent)(\n      reactTag,\n      UIManager.getConstants().AccessibilityEventTypes.typeViewClicked,\n    );\n  }\n}\n\nmodule.exports = legacySendAccessibilityEvent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                             \n\nimport {ConditionallyIgnoredEventHandlers} from '../../NativeComponent/ViewConfigIgnore';\n\n                                          \n                    \n                            \n  \n\nconst RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture',\n      },\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture',\n      },\n    },\n\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange',\n    },\n    topContentSizeChange: {\n      registrationName: 'onContentSizeChange',\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync',\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync',\n    },\n  },\n  validAttributes: {\n    dynamicTypeRamp: true,\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    // flowlint-next-line untyped-import:off\n    textShadowOffset: {diff: require('../../Utilities/differ/sizesDiffer')},\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    color: {process: require('../../StyleSheet/processColor').default},\n    maxFontSizeMultiplier: true,\n    textShadowColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    editable: true,\n    inputAccessoryViewID: true,\n    inputAccessoryViewButtonLabel: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {\n      process: require('../../StyleSheet/processColor').default,\n    },\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    submitBehavior: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {process: require('../../StyleSheet/processColor').default},\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true,\n    lineBreakStrategyIOS: true,\n    lineBreakModeIOS: true,\n    smartInsertDelete: true,\n    ...ConditionallyIgnoredEventHandlers({\n      onChange: true,\n      onSelectionChange: true,\n      onContentSizeChange: true,\n      onScroll: true,\n      onChangeSync: true,\n      onKeyPressSync: true,\n    }),\n    disableKeyboardShortcuts: true,\n  },\n};\n\nmodule.exports = (RCTTextInputViewConfig                              );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n// This class is responsible for coordinating the \"focused\" state for\n// TextInputs. All calls relating to the keyboard should be funneled\n// through here.\n\n             \n               \n                                   \n                                 \n                           \n                                               \n\nimport {Commands as AndroidTextInputCommands} from '../../Components/TextInput/AndroidTextInputNativeComponent';\nimport {Commands as iOSTextInputCommands} from '../../Components/TextInput/RCTSingelineTextInputNativeComponent';\n\nconst {findNodeHandle} = require('../../ReactNative/RendererProxy');\nconst Platform = require('../../Utilities/Platform');\n\nlet currentlyFocusedInputRef                = null;\nconst inputs = new Set  \n               \n                \n                                                    \n                                                                    \n                \n                                                \n                                              \n                        \n          \n                                           \n  ();\n\nfunction currentlyFocusedInput()                {\n  return currentlyFocusedInputRef;\n}\n\n/**\n * Returns the ID of the currently focused text field, if one exists\n * If no text field is focused it returns null\n */\nfunction currentlyFocusedField()          {\n  if (__DEV__) {\n    console.error(\n      'currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput',\n    );\n  }\n\n  return findNodeHandle(currentlyFocusedInputRef);\n}\n\nfunction focusInput(textField               )       {\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    currentlyFocusedInputRef = textField;\n  }\n}\n\nfunction blurInput(textField               )       {\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    currentlyFocusedInputRef = null;\n  }\n}\n\nfunction focusField(textFieldID         )       {\n  if (__DEV__) {\n    console.error('focusField no longer works. Use focusInput');\n  }\n\n  return;\n}\n\nfunction blurField(textFieldID         ) {\n  if (__DEV__) {\n    console.error('blurField no longer works. Use blurInput');\n  }\n\n  return;\n}\n\n/**\n * @param {number} TextInputID id of the text field to focus\n * Focuses the specified text field\n * noop if the text field was already focused or if the field is not editable\n */\nfunction focusTextInput(textField               ) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'focusTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (textField != null) {\n    const fieldCanBeFocused =\n      currentlyFocusedInputRef !== textField &&\n      // $FlowFixMe - `currentProps` is missing in `NativeMethods`\n      textField.currentProps?.editable !== false;\n\n    if (!fieldCanBeFocused) {\n      return;\n    }\n    focusInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.focus(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.focus(textField);\n    }\n  }\n}\n\n/**\n * @param {number} textFieldID id of the text field to unfocus\n * Unfocuses the specified text field\n * noop if it wasn't focused\n */\nfunction blurTextInput(textField               ) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'blurTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    blurInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.blur(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.blur(textField);\n    }\n  }\n}\n\nfunction registerInput(textField              ) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'registerInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  inputs.add(textField);\n}\n\nfunction unregisterInput(textField              ) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'unregisterInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n  inputs.delete(textField);\n}\n\nfunction isTextInput(textField              )          {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'isTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return false;\n  }\n\n  return inputs.has(textField);\n}\n\nmodule.exports = {\n  currentlyFocusedInput,\n  focusInput,\n  blurInput,\n\n  currentlyFocusedField,\n  focusField,\n  blurField,\n  focusTextInput,\n  blurTextInput,\n  registerInput,\n  unregisterInput,\n  isTextInput,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                    \n                               \n               \n                                             \n          \n\nconst registerCallableModule                         = (function () {\n  if (global.RN$Bridgeless === true) {\n    return (name, moduleOrFactory) => {\n      if (typeof moduleOrFactory === 'function') {\n        global.RN$registerCallableModule(name, moduleOrFactory);\n        return;\n      }\n\n      global.RN$registerCallableModule(name, () => moduleOrFactory);\n    };\n  }\n\n  const BatchedBridge = require('../BatchedBridge/BatchedBridge');\n  return (name, moduleOrFactory) => {\n    if (typeof moduleOrFactory === 'function') {\n      BatchedBridge.registerLazyCallableModule(name, moduleOrFactory);\n      return;\n    }\n\n    BatchedBridge.registerCallableModule(name, moduleOrFactory);\n  };\n})();\n\nexport default registerCallableModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                                                                \n                                                                     \n\nfunction flattenStyle                                           (\n  style             ,\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n)                                             {\n  if (style === null || typeof style !== 'object') {\n    return undefined;\n  }\n\n  if (!Array.isArray(style)) {\n    // $FlowFixMe[incompatible-return]\n    return style;\n  }\n\n  const result                         = {};\n  for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    const computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      // $FlowFixMe[invalid-in-rhs]\n      for (const key in computedStyle) {\n        // $FlowFixMe[incompatible-use]\n        // $FlowFixMe[invalid-computed-prop]\n        result[key] = computedStyle[key];\n      }\n    }\n  }\n  // $FlowFixMe[incompatible-return]\n  return result;\n}\n\nmodule.exports = flattenStyle;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\n                                       \n                                       \n    \n\nfunction codegenNativeCommands                 (options                   )    {\n  const commandObj                                                   = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj     )   );\n}\n\nexport default codegenNativeCommands;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\n'use strict';\n\nlet logListeners;\n\n                      \n                                                                             \n   \n\n                                                      \n\nfunction unstable_setLogListeners(listeners               ) {\n  logListeners = listeners;\n}\n\n/*\n * @returns {bool} true if different, false if equal\n */\nconst deepDiffer = function (\n  one     ,\n  two     ,\n  maxDepthOrOptions                   = -1,\n  maybeOptions          ,\n)          {\n  const options =\n    typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;\n  const maxDepth =\n    typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal unless explicitly configured otherwise\n    let unsafelyIgnoreFunctions = options?.unsafelyIgnoreFunctions;\n    if (unsafelyIgnoreFunctions == null) {\n      if (\n        logListeners &&\n        logListeners.onDifferentFunctionsIgnored &&\n        (!options || !('unsafelyIgnoreFunctions' in options))\n      ) {\n        logListeners.onDifferentFunctionsIgnored(one.name, two.name);\n      }\n      unsafelyIgnoreFunctions = true;\n    }\n    return !unsafelyIgnoreFunctions;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    const len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (let ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n  } else {\n    for (const key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1, options)) {\n        return true;\n      }\n    }\n    for (const twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndeepDiffer.unstable_setLogListeners = unstable_setLogListeners;\nmodule.exports = deepDiffer;\n"],"names":["Commands","__INTERNAL_VIEW_CONFIG","_default","_codegenNativeCommands","require","AndroidTextInputNativeComponent","_NativeComponentRegistry","_RCTTextInputViewConfig","SinglelineTextInputNativeComponent","legacySendAccessibilityEvent","reactTag","eventType","_nullthrows","_UIManager","module","RCTTextInputViewConfig","_ViewConfigIgnore","findNodeHandle","Platform","currentlyFocusedInputRef","inputs","Set","currentlyFocusedInput","currentlyFocusedField","__DEV__","console","focusInput","textField","blurInput","focusField","textFieldID","blurField","focusTextInput","_textField_currentProps","fieldCanBeFocused","_RCTSingelineTextInputNativeComponent","_AndroidTextInputNativeComponent","blurTextInput","registerInput","unregisterInput","isTextInput","registerCallableModule","global","name","moduleOrFactory","BatchedBridge","flattenStyle","style","undefined","Array","result","i","styleLength","computedStyle","key","dispatchCommand","codegenNativeCommands","options","commandObj","command","ref","args","logListeners","unstable_setLogListeners","listeners","deepDiffer","one","two","maybeOptions","maxDepthOrOptions","maxDepth","unsafelyIgnoreFunctions","len","ii","twoKey"],"mappings":"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"}