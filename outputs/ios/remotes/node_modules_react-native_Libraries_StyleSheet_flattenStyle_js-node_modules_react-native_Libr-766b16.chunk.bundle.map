{"version":3,"file":"node_modules_react-native_Libraries_StyleSheet_flattenStyle_js-node_modules_react-native_Libr-766b16.chunk.bundle","sources":["webpack://miniApp/./node_modules/react-native/Libraries/StyleSheet/flattenStyle.js","webpack://miniApp/./node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                                                                \n                                                                     \n\nfunction flattenStyle                                           (\n  style             ,\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n)                                             {\n  if (style === null || typeof style !== 'object') {\n    return undefined;\n  }\n\n  if (!Array.isArray(style)) {\n    // $FlowFixMe[incompatible-return]\n    return style;\n  }\n\n  const result                         = {};\n  for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    const computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      // $FlowFixMe[invalid-in-rhs]\n      for (const key in computedStyle) {\n        // $FlowFixMe[incompatible-use]\n        // $FlowFixMe[invalid-computed-prop]\n        result[key] = computedStyle[key];\n      }\n    }\n  }\n  // $FlowFixMe[incompatible-return]\n  return result;\n}\n\nmodule.exports = flattenStyle;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\n                                       \n                                       \n    \n\nfunction codegenNativeCommands                 (options                   )    {\n  const commandObj                                                   = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj     )   );\n}\n\nexport default codegenNativeCommands;\n"],"names":["flattenStyle","style","undefined","Array","result","i","styleLength","computedStyle","key","module","_default","dispatchCommand","require","codegenNativeCommands","options","commandObj","command","ref","args"],"mappings":";;;AAAA;;;;;;;;CAQC,GAEY;AAKb,SAASA,aACPC,KAAK;IAGL,IAAIA,UAAU,QAAQ,OAAOA,UAAU,UAAU;QAC/C,OAAOC;IACT;IAEA,IAAI,CAACC,MAAM,OAAO,CAACF,QAAQ;QACzB,kCAAkC;QAClC,OAAOA;IACT;IAEA,IAAMG,SAAiC,CAAC;IACxC,IAAK,IAAIC,IAAI,GAAGC,cAAcL,MAAM,MAAM,EAAEI,IAAIC,aAAa,EAAED,EAAG;QAChE,sDAAsD;QACtD,IAAME,gBAAgBP,aAAaC,KAAK,CAACI,EAAE;QAC3C,IAAIE,eAAe;YACjB,6BAA6B;YAC7B,IAAK,IAAMC,OAAOD,cAAe;gBAC/B,+BAA+B;gBAC/B,oCAAoC;gBACpCH,MAAM,CAACI,IAAI,GAAGD,aAAa,CAACC,IAAI;YAClC;QACF;IACF;IACA,kCAAkC;IAClC,OAAOJ;AACT;AAEAK,cAAc,GAAGT;;;;;AC7CjB;;;;;;;;CAQC;;;2CAsBDU;;;eAAAA;;;AApBA,IAAOC,kBAAmBC,kEAAJD;AAMtB,SAASE,sBAAuCC,OAAO;IACrD,IAAMC,aAA+D,CAAC;IAEtED,QAAQ,iBAAiB,CAAC,OAAO,CAACE,CAAAA;QAChC,kCAAkC;QAClCD,UAAU,CAACC,QAAQ,GAAG,CAACC,KAAK,GAAGC;YAC7B,gCAAgC;YAChCP,gBAAgBM,KAAKD,SAASE;QAChC;IACF;IAEA,OAASH;AACX;IAEAL,WAAeG"}