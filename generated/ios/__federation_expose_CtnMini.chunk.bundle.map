{"version":3,"file":"__federation_expose_CtnMini.chunk.bundle","sources":["webpack://miniApp/./src/store/accountZustandStore.ts","webpack://miniApp/./src/navigation/auth-navigation/index.tsx","webpack://miniApp/./src/navigation/index.tsx","webpack://miniApp/./src/navigation/un-auth-navigation/index.tsx","webpack://miniApp/./src/navigation/wrap-auth-unauth/index.tsx","webpack://miniApp/./src/screen/home/index.tsx","webpack://miniApp/./src/screen/login/index.tsx","webpack://miniApp/./src/screen/service/ServiceScreen.tsx"],"sourcesContent":["import {create} from 'zustand';\n\ninterface ZutandStore {\n  isLogin: boolean;\n  dataAccount: any;\n  setDataAccount: (dataAccount: any) => void;\n  setIsLogin: (isLogin: boolean) => void;\n}\n\nconst initialSettingState = {\n  isLogin: false,\n  dataAccount: {},\n};\n\nexport const useAccountZutandStore = create<ZutandStore>((set, get) => ({\n  ...initialSettingState,\n  setDataAccount: (dataAccount: any) => {\n    set({dataAccount});\n  },\n  setIsLogin: (isLogin: boolean) => {\n    set({isLogin});\n  },\n}));\n","import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreenMiniApp from \"../../screen/home\";\nimport ServiceScreenMiniApp from \"../../screen/service/ServiceScreen\";\n\nconst Stack = createNativeStackNavigator();\nconst AuthorizedNavigation = () => {\n  return (\n    <Stack.Navigator initialRouteName=\"Home\">\n      <Stack.Screen name=\"Home\" component={HomeScreenMiniApp} />\n      <Stack.Screen name=\"Service\" component={ServiceScreenMiniApp} />\n    </Stack.Navigator>\n  );\n};\n\nexport default AuthorizedNavigation;\n","import {useEffect} from 'react';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport WrapAuthAndUnAuthNavigator from './wrap-auth-unauth';\nimport React from 'react';\nimport {View} from 'react-native';\n\nconst Stack = createNativeStackNavigator();\nconst WrapNavigationRemote = () => {\n  useEffect(() => {\n    const miniAppReact = React;\n    const hostReact = (globalThis as any).hostReact;\n\n    console.log('MINI APP REACT INSTANCE:', miniAppReact.version);\n\n    if (hostReact) {\n      console.log('--- KIỂM TRA SO SÁNH ---');\n      console.log(\n        'React của Host và Mini có phải là một không?',\n        hostReact === miniAppReact,\n      );\n    } else {\n      console.warn('Không tìm thấy hostReact trên global scope!');\n    }\n  }, []);\n  useEffect(() => {\n    console.log('WrapNavigatio from remote');\n  }, []);\n  return (\n    <View style={{flex: 1}}>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"wrap-auth-unauth\"\n          component={WrapAuthAndUnAuthNavigator}\n          options={{headerShown: false}}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\nexport default WrapNavigationRemote;\n","import {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport LoginScreen from '../../screen/login';\n\nconst Stack = createNativeStackNavigator();\nconst UnAuthorizedNavigation = () => {\n  return (\n    <Stack.Navigator initialRouteName=\"Login\">\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n    </Stack.Navigator>\n  );\n};\n\nexport default UnAuthorizedNavigation;\n","import {useAccountZutandStore} from '../../store/accountZustandStore';\nimport AuthorizedNavigation from '../auth-navigation';\nimport UnAuthorizedNavigation from '../un-auth-navigation';\n\nconsole.log('WrapAuthAndUnAuthNavigator');\nconst WrapAuthAndUnAuthNavigator = () => {\n  const {isLogin} = useAccountZutandStore();\n  return <>{isLogin ? <AuthorizedNavigation /> : <UnAuthorizedNavigation />}</>;\n};\n\nexport default WrapAuthAndUnAuthNavigator;\n","import {useNavigation} from '@react-navigation/native';\nimport {Button, Text, View} from 'react-native';\nimport {useAccountZutandStore} from '../../store/accountZustandStore';\n\nconst HomeScreenMiniApp = () => {\n  const {setIsLogin} = useAccountZutandStore();\n  const navigation = useNavigation<any>();\n  const handleLogout = () => {\n    setIsLogin(false);\n  };\n  return (\n    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n      <Text style={{textAlign: 'center'}}>Home Screen</Text>\n      <Button\n        title=\"Sang service \"\n        onPress={() => navigation.navigate('Service' as never)}\n      />\n      <Button title=\"Đăng xuất\" onPress={handleLogout} />\n    </View>\n  );\n};\nexport default HomeScreenMiniApp;\n","import {useNavigation} from '@react-navigation/native';\nimport React, {useEffect} from 'react';\nimport {Button, Text, View} from 'react-native';\nimport {useAccountZutandStore} from '../../store/accountZustandStore';\n\nconst LoginScreen = () => {\n  const {setIsLogin} = useAccountZutandStore();\n  useEffect(() => {\n    console.log('LoginScreen');\n  }, []);\n\n  const handleLogin = () => {\n    //goi api login\n    //nếu login thành công thì set isLogin = true\n    setIsLogin(true);\n  };\n\n  return (\n    <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n      <Text>LoginScreen</Text>\n      <Button title=\"Đăng nhập\" onPress={handleLogin} />\n    </View>\n  );\n};\n\nexport default LoginScreen;\n","import {NavigationState, useNavigation} from '@react-navigation/native';\nimport {Button, Text, View} from 'react-native';\nimport {useAccountZutandStore} from '../../store/accountZustandStore';\n\nconst ServiceScreenMiniApp = () => {\n  const {setIsLogin} = useAccountZutandStore();\n  const navigation = useNavigation<any>();\n  const handleLogout = () => {\n    setIsLogin(false);\n  };\n  return (\n    <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n      <Text style={{textAlign: 'center'}}>Service Screen</Text>\n      <Button\n        title=\"sang home\"\n        onPress={() => navigation.navigate('Home' as never)}\n      />\n      <Button onPress={() => navigation.goBack()} title=\"Go back\"></Button>\n      <Button\n        onPress={() => navigation.popTo('Home')}\n        title=\"Go to Home\"></Button>\n      <Button\n        title=\"Go back to first screen in stack\"\n        onPress={() => {\n          navigation.popToTop();\n        }}\n      />\n      <Button title=\"Đăng xuất\" onPress={handleLogout} />\n    </View>\n  );\n};\nexport default ServiceScreenMiniApp;\n"],"names":["useAccountZutandStore","initialSettingState","_zustand","set","get","dataAccount","isLogin","_default","Stack","_nativestack","AuthorizedNavigation","_home","_ServiceScreen","WrapNavigationRemote","_react","miniAppReact","hostReact","globalThis","console","_reactnative","_wrapauthunauth","UnAuthorizedNavigation","_login","WrapAuthAndUnAuthNavigator","_accountZustandStore","_authnavigation","_unauthnavigation","HomeScreenMiniApp","setIsLogin","navigation","_native","handleLogout","LoginScreen","handleLogin","ServiceScreenMiniApp"],"mappings":"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"}